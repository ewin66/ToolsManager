//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolsManager.DataServices.Client.MachineServiceProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MachineServiceProxy.IMachineManagerService")]
    public interface IMachineManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/AddMachine", ReplyAction="http://tempuri.org/IMachineManagerService/AddMachineResponse")]
        bool AddMachine(ToolsManager.DataServices.Common.MachineDTO machine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/AddMachine", ReplyAction="http://tempuri.org/IMachineManagerService/AddMachineResponse")]
        System.Threading.Tasks.Task<bool> AddMachineAsync(ToolsManager.DataServices.Common.MachineDTO machine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/DeleteMachine", ReplyAction="http://tempuri.org/IMachineManagerService/DeleteMachineResponse")]
        void DeleteMachine(ToolsManager.DataServices.Common.MachineDTO machine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/DeleteMachine", ReplyAction="http://tempuri.org/IMachineManagerService/DeleteMachineResponse")]
        System.Threading.Tasks.Task DeleteMachineAsync(ToolsManager.DataServices.Common.MachineDTO machine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/DeleteAllMachines", ReplyAction="http://tempuri.org/IMachineManagerService/DeleteAllMachinesResponse")]
        void DeleteAllMachines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/DeleteAllMachines", ReplyAction="http://tempuri.org/IMachineManagerService/DeleteAllMachinesResponse")]
        System.Threading.Tasks.Task DeleteAllMachinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/GetMachines", ReplyAction="http://tempuri.org/IMachineManagerService/GetMachinesResponse")]
        ToolsManager.DataServices.Common.MachineDTO[] GetMachines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/GetMachines", ReplyAction="http://tempuri.org/IMachineManagerService/GetMachinesResponse")]
        System.Threading.Tasks.Task<ToolsManager.DataServices.Common.MachineDTO[]> GetMachinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/SaveChanges", ReplyAction="http://tempuri.org/IMachineManagerService/SaveChangesResponse")]
        bool SaveChanges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMachineManagerService/SaveChanges", ReplyAction="http://tempuri.org/IMachineManagerService/SaveChangesResponse")]
        System.Threading.Tasks.Task<bool> SaveChangesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMachineManagerServiceChannel : ToolsManager.DataServices.Client.MachineServiceProxy.IMachineManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MachineManagerServiceClient : System.ServiceModel.ClientBase<ToolsManager.DataServices.Client.MachineServiceProxy.IMachineManagerService>, ToolsManager.DataServices.Client.MachineServiceProxy.IMachineManagerService {
        
        public MachineManagerServiceClient() {
        }
        
        public MachineManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MachineManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MachineManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MachineManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddMachine(ToolsManager.DataServices.Common.MachineDTO machine) {
            return base.Channel.AddMachine(machine);
        }
        
        public System.Threading.Tasks.Task<bool> AddMachineAsync(ToolsManager.DataServices.Common.MachineDTO machine) {
            return base.Channel.AddMachineAsync(machine);
        }
        
        public void DeleteMachine(ToolsManager.DataServices.Common.MachineDTO machine) {
            base.Channel.DeleteMachine(machine);
        }
        
        public System.Threading.Tasks.Task DeleteMachineAsync(ToolsManager.DataServices.Common.MachineDTO machine) {
            return base.Channel.DeleteMachineAsync(machine);
        }
        
        public void DeleteAllMachines() {
            base.Channel.DeleteAllMachines();
        }
        
        public System.Threading.Tasks.Task DeleteAllMachinesAsync() {
            return base.Channel.DeleteAllMachinesAsync();
        }
        
        public ToolsManager.DataServices.Common.MachineDTO[] GetMachines() {
            return base.Channel.GetMachines();
        }
        
        public System.Threading.Tasks.Task<ToolsManager.DataServices.Common.MachineDTO[]> GetMachinesAsync() {
            return base.Channel.GetMachinesAsync();
        }
        
        public bool SaveChanges() {
            return base.Channel.SaveChanges();
        }
        
        public System.Threading.Tasks.Task<bool> SaveChangesAsync() {
            return base.Channel.SaveChangesAsync();
        }
    }
}
