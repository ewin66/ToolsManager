//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DbModel", "FK_TaskInfo_ViewTemplate", "ViewTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToolsManager.DataModel.Common.Model.ViewTemplate), "TaskInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToolsManager.DataModel.Common.Model.TaskInfo), true)]

#endregion

namespace ToolsManager.DataModel.Common.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DbEntities object using the connection string found in the 'DbEntities' section of the application configuration file.
        /// </summary>
        public DbEntities() : base("name=DbEntities", "DbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DbEntities object.
        /// </summary>
        public DbEntities(string connectionString) : base(connectionString, "DbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DbEntities object.
        /// </summary>
        public DbEntities(EntityConnection connection) : base(connection, "DbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskInfo> TaskInfoes
        {
            get
            {
                if ((_TaskInfoes == null))
                {
                    _TaskInfoes = base.CreateObjectSet<TaskInfo>("TaskInfoes");
                }
                return _TaskInfoes;
            }
        }
        private ObjectSet<TaskInfo> _TaskInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ViewTemplate> ViewTemplates
        {
            get
            {
                if ((_ViewTemplates == null))
                {
                    _ViewTemplates = base.CreateObjectSet<ViewTemplate>("ViewTemplates");
                }
                return _ViewTemplates;
            }
        }
        private ObjectSet<ViewTemplate> _ViewTemplates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskInfoes(TaskInfo taskInfo)
        {
            base.AddObject("TaskInfoes", taskInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ViewTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToViewTemplates(ViewTemplate viewTemplate)
        {
            base.AddObject("ViewTemplates", viewTemplate);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="TaskInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="viewTemplateId">Initial value of the ViewTemplateId property.</param>
        public static TaskInfo CreateTaskInfo(global::System.Guid id, global::System.String description, global::System.String type, global::System.Guid viewTemplateId)
        {
            TaskInfo taskInfo = new TaskInfo();
            taskInfo.Id = id;
            taskInfo.Description = description;
            taskInfo.Type = type;
            taskInfo.ViewTemplateId = viewTemplateId;
            return taskInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastExecution
        {
            get
            {
                return _LastExecution;
            }
            set
            {
                OnLastExecutionChanging(value);
                ReportPropertyChanging("LastExecution");
                _LastExecution = StructuralObject.SetValidValue(value, "LastExecution");
                ReportPropertyChanged("LastExecution");
                OnLastExecutionChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastExecution;
        partial void OnLastExecutionChanging(Nullable<global::System.DateTime> value);
        partial void OnLastExecutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ViewTemplateId
        {
            get
            {
                return _ViewTemplateId;
            }
            set
            {
                OnViewTemplateIdChanging(value);
                ReportPropertyChanging("ViewTemplateId");
                _ViewTemplateId = StructuralObject.SetValidValue(value, "ViewTemplateId");
                ReportPropertyChanged("ViewTemplateId");
                OnViewTemplateIdChanged();
            }
        }
        private global::System.Guid _ViewTemplateId;
        partial void OnViewTemplateIdChanging(global::System.Guid value);
        partial void OnViewTemplateIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "FK_TaskInfo_ViewTemplate", "ViewTemplate")]
        public ViewTemplate ViewTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ViewTemplate>("DbModel.FK_TaskInfo_ViewTemplate", "ViewTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ViewTemplate>("DbModel.FK_TaskInfo_ViewTemplate", "ViewTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ViewTemplate> ViewTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ViewTemplate>("DbModel.FK_TaskInfo_ViewTemplate", "ViewTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ViewTemplate>("DbModel.FK_TaskInfo_ViewTemplate", "ViewTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="ViewTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ViewTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ViewTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static ViewTemplate CreateViewTemplate(global::System.Guid id, global::System.String title)
        {
            ViewTemplate viewTemplate = new ViewTemplate();
            viewTemplate.Id = id;
            viewTemplate.Title = title;
            return viewTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "FK_TaskInfo_ViewTemplate", "TaskInfo")]
        public EntityCollection<TaskInfo> TaskInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskInfo>("DbModel.FK_TaskInfo_ViewTemplate", "TaskInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskInfo>("DbModel.FK_TaskInfo_ViewTemplate", "TaskInfo", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
